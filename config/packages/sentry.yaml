when@prod:
    sentry:
        dsn: '%env(SENTRY_DSN)%'
        # this hooks into critical paths of the framework (and vendors) to perform
        # automatic instrumentation (there might be some performance penalty)
        # https://docs.sentry.io/platforms/php/guides/symfony/performance/instrumentation/automatic-instrumentation/
        tracing:
            enabled: false

        # If you are using Monolog, you also need this additional configuration to log the errors correctly:
        # https://docs.sentry.io/platforms/php/guides/symfony/#monolog-integration
        register_error_listener: false
        register_error_handler:  false
        options:
            ignore_exceptions:
                # these 2 were defaults before, but in Sentry v5 they are no longer included
                - Symfony\Component\ErrorHandler\Error\FatalError
                - Symfony\Component\Debug\Exception\FatalErrorException
                - Symfony\Component\HttpKernel\Exception\NotFoundHttpException
                - Symfony\Component\Security\Core\Exception\AccessDeniedException
                # password reset related exceptions
                - SymfonyCasts\Bundle\ResetPassword\Exception\ExpiredResetPasswordTokenException
                - SymfonyCasts\Bundle\ResetPassword\Exception\InvalidResetPasswordTokenException
                - SymfonyCasts\Bundle\ResetPassword\Exception\TooManyPasswordRequestsException
            attach_stacktrace: true
            # Add request headers, cookies, IP address and the authenticated user
            # see https://docs.sentry.io/platforms/php/data-management/data-collected/ for more info
            send_default_pii:  true

    # monolog integration in monolog.yaml

    services:
        Monolog\Processor\PsrLogMessageProcessor:
            tags: { name: monolog.processor, handler: sentry }
